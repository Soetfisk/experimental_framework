#cameraConfig: {
#  pos: [0.0,-110.0,7.0]
#  lookAt: [0.0,0.0,20.0]
#  fov: 65.0
#  screenWidth: 1280
#  screenHeight: 800
#  parDistCam: 135.0
#}

# Keyboard callbacks, execute only once or many and arguments
# If we use a 'word', it will be equivalent to a key, but triggered
# by a message.
keys:
  - key: startGame
    callback: startGame
    comment: Start the game
    once: True
  - key: c
    callback: changeCrossHairControl
    comment: cycle cross hair controller (kbd,mouse,eyetracker)

#  - key: c
#    callback: setChByKeyboard
#    comment: Use the keyboard to aim and shoot
#    once: False
#  - key: 4
#    callback: setChByMouse
#    comment: Use mouse to aim and shoot
#    once: False
#  - key: 5
#    callback: setChByTracker
#    comment: Use tracker to aim and keyboard to shoot
#    once: false

# key":"1", "callback":"moveCannon","comment":"Move cannon Node up","once":false, "args":0.05 },
# key":"2", "callback":"moveCannon","comment":"Move cannon Node down","once":false, "args":-0.05 },

parDistCam: 250.0

pointsHUD:
  enabled: True
  font: Elements/Game/models/textures/komikax.egg
  size: 0.05

shooter:
  crosshair: Elements/Game/models/textures/crosshair256.png
  # control: mouse or keyboard
  control: mouse
  focusplane: 249.0
  cannonModel: Elements/Game/models/turret.egg
  cannonPosY: 4.0
# work around for the position of the cannon depending on the resolution
# of the screen
# -1 for 1680x1050,
# -1.2 for 1024x768
# -0.95 for 1280x800"
  cannonPosZ: -1.3
  scaleCH: 8.0
  weapon: ""
  speedCH: 0.01
  bullet: Elements/Game/models/ball.egg
# bulletSet: How many bullets can be at the air at the same time"
  bulletSet: 10
  bulletSize: 0.1
  bulletTime: 0.4
  explosionParticle: Elements/Game/explosion.ptf
  cannonParticle: Elements/Game/dust.ptf

#    "validation":
#    {
#        "parachutesId":0,
#        "fallSpeed":8,
#        "distBetween":10,
#        "levelsTest":[0,1,2,3,4,5,6]
#    },

soundsConfig:
  vol: 10
  enabled: False
  sounds:
   - id: shoot
     filename: Elements/Game/sounds/shoot.wav
     vol: 1.0
   - id: explosion
     filename: Elements/Game/sounds/explosion.wav
     vol: 0.5

targetSequences:
  use: 0
  sequences:
     - id: 0
       difficulty: hard
       seq: [Red, Blue, Green, Green, Red, Blue]
     - id: 1
       difficulty: easy
       seq: [Red, Red, Red, Red, Red, Red]
     - id: 2
       difficulty: medium
       seq: [Red, Blue, Red, Blue, Red, Blue]

LODEvents:
# affects: could be red,red0,all,non_targets,all_but_ct (ct=current_target) ",
# speed: is the speed of change",
# steps: is how many intermediate steps between the change in quality (change blindness)",
# newQuality: could be a fixed quality or nothing if the type has a different way of calculating",
# cycles: is specific for CYCLE type, indicating after how many cycles it should change to #'newQuality'",
#         see LoDManager.newCycle()"
 lodEvents:
   - evtType: CYCLE
     affects: all
     speed: 1
     steps: 1
     newQuality: 5
     cycles: 1
     handler: newCycle
   - evtType: CURSOR_CHANGE
     affects: non_targets
     speed: 1
     steps: 1
     newQuality: X
   - evtType: FORCE
     affects: all_but_ct
     speed: 1
     steps: 1
     newQuality: 4

parachutes:
  simultaneous: 6
  speed: 20.0
  # two seconds before parachutes start to fall
  fallDelay: 2
  scale: 10
  model: para01.egg
  # blendtype: change from 1 to 4 directly or in 4 steps -- direct, steps
  blendtype:
    blendfunction: direct


  # badGuys
  # HUD Label
  targetsLabel: Enemy
  # colours used, and how MANY!!!
  targets: [Magenta, Magenta, Magenta]
  # quality for bad guys (100 is maximum)
  targetsQ: [100]
  targetCount: 10
  # goodGuys
  nonTargetsLabel: Allies
  nonTargets: [Green, Green, Green]
  nonTargetsQ: [50]
  nonTargetCount: 10
  texturePrefix: PilotData/textures/soldierColor_
  texturePostfix: .png
#    levels: [50,30,25,20,15,10,10]


