elements:

 - className: EmptyState
   name: start
   timeout: 0.5

 - className: EmptyState
   name: end

 - className: ScreenText
   file_message: experiments/JohnMartin/introtext.txt
   name: introText

 - className: ScreenText
   file_message: experiments/JohnMartin/starttext.txt
   name: startText

 - className: ScreenText
   file_message: experiments/JohnMartin/endtext.txt
   name: endText

 - module: DataForm
   className: ConsentForm
   name: consentForm
   color_background: (0.3,0.3,0.4,1)
   file_config: experiments/JohnMartin/data/consentForm.yaml

 - className: ScreenText
   name: colourBlindText
   color_background: (0.3,0.3,0.4,1)
   file_message: experiments/JohnMartin/data/colourBlindText.txt
   # example defining the keybindings directly here

 - className: ScreenText
   name: colourBlindProblem
   color_background: (0.3,0.3,0.4,1)
   file_message: experiments/JohnMartin/data/colourBlindProblem.txt

# Display ishihara test, expects an exact number as an answer.
 - module: FullScreenImage
   className: ImageQuery
   name: colourBlindCheck
   file_imageNameStr: experiments/JohnMartin/data/colourblind/%d.png
   tuple_imageStrArgs: (2,3,6,42,45,74,97)
   #tuple_imageStrArgs: (2)
   tuple_imageAnswers: (2,3,6,42,45,74,97)
   #tuple_imageAnswers: (2)
   tuple_scale: (0.5,0.5)


 - className: Select2AFCImage
   color_background: (0.3,0.3,0.3,1)
   name: imageCompare
   # display reference/golden in the top
   show_reference: True
   # first in pair is always the "reference" if show_reference is True
   tuple_image_pairs: [
   [MIP0b,MIP0b,MIP0bq],
   [MIP1b,MIP1b,MIP1bq],
   [MIP3b,MIP3b,MIP3bq],
   [MIP4b,MIP4b,MIP4bq],
   [MIP0c,MIP0c,MIP0cq],
   [MIP1c,MIP1c,MIP1cq],
   [MIP2c,MIP2c,MIP2cq],
   [MIP3c,MIP3c,MIP3cq],
   [MIP4c,MIP4c,MIP4cq],
   [MIP0s,MIP0s,MIP0sq],
   [MIP1s,MIP1s,MIP1sq],
   [MIP2s,MIP2s,MIP2sq],
   [MIP3s,MIP3s,MIP3sq],
   [MIP4s,MIP4s,MIP4sq],
   ]
   image_prefix: 'experiments/JohnMartin/images/'
   image_postfix: '.png'
   image_scale: [1.0,1.0]
   image_voffset: 0.0
   random_pairs: True
   choice_text: 'Which image looks most similar to the top image?'
   # will present (A,B) and (B,A)
   mirror_pairs: True
   output_answers: 'experiments\JohnMartin\run'
   time_between: 1
   image_between: None
   keys:
   - key: arrow_left
     callback: imageSelected
     tuple_args: ('left')
   - key: arrow_right
     callback: imageSelected
     tuple_args: ('right')
# - module: WhackAMole
#   className: WhackAMole
#   name: mole1
#   fname_moleModel: Elements/WhackAMole/textures/mole.egg
#   fname_holeTop: Elements/WhackAMole/textures/tophole.png
#   fname_holeBottom: Elements/WhackAMole/textures/botomhole.png
#   fname_back: Elements/WhackAMole/textures/back.png
#   fname_mole: Elements/WhackAMole/textures/mole_1.png
#   fname_plainGrass: Elements/WhackAMole/textures/no_hole.jpg
#   int_gridSize: 8
#   int_moleCalibPoints: 8
#   int_waitForDown: 4
#   keys:
#   - key: mouse1
#     callback: hammerDown

transitions:
- trans: 'start @ introText:timeout_start'
- trans: 'introText @ consentForm:auto'
- trans: 'consentForm @ colourBlindText:yesPressed'
- trans: 'consentForm @ end:noPressed'
- trans: 'colourBlindText @ colourBlindCheck:auto'
- trans: 'colourBlindCheck @ colourBlindProblem:imageQueryBad'
- trans: 'colourBlindProblem @ end:auto'
- trans: 'colourBlindCheck @ startText:imageQueryOk'
- trans: 'colourBlindProblem @ end:auto'
- trans: 'startText @ imageCompare:auto'
- trans: 'imageCompare @ endText:end_imageCompare'
- trans: 'endText @ end:auto'



#- trans: 'mole1 @ end:auto'
