elements:

# the order in which classes are defined is not important, the FSM definition
# is going to define what is executed.
# Nevertheless, when parsing this YAML file, every class definition found is
# created, so if not used it is better to comment out any code with '#'

 - className: EmptyState
   name: start
   timeout: 1.0

 - className: ScreenText
   name: IntroScreen
   plain_text: PilotData/introPilot.txt
   config: PilotData/introScreen.yaml

 - className: EmptyState
   name: ResultsUploader

 - module: DataForm
   className: ConsentForm
   name: consentForm
   config: PilotData/consentForm.yaml

 - className: ServerConfig
   name: studyServer
   serverName: 127.0.0.1
   serverPort: 2357
   keys:
    - key: c
      callback: getConfig
    - key: p
      callback: pushResults
      args: ['this is a result']

 - className: ScreenText
   name: colourBlindText
   plain_text: PilotData/colourBlindText.txt
   keys:
    - key: escape
      callback: sendMessage
      args: [auto]

 - module: FullScreenImage
   className: ImageQuery
   name: colourBlindCheck
   imageNameStr: PilotData/colorblind/plate%d.png
#   imageStrArgs: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]
   imageStrArgs: [1,2,3]
#   imageAnswers: [12,8,6,29,57,5,3,15,74,2,6,97,45,5,7,16,73]
   imageAnswers: [12,8,6]
   images: exp range(1,39)
   scale: [0.5,0.5]
   keys:
    - key: n
      callback: nextImage
      once: false

 - className: ScreenText
   name: colourBlindProblem
   plain_text: PilotData/colourBlindProblem.txt

 - module: Pilot
   className: ScreenAdjustment
   name: rescaleScreen
   modelName: "PilotData/models/plane"
   texture: "PilotData/textures/soldierRed_100.png"
   config: PilotData/screenAdjust.yaml
   # distance of the parachute from camera
   parDistCam: 250.0
   writeToGlobals:
     rescaleFactor: 12.0

   keys:
    - key: escape
      callback: sendMessage
      args: ['auto']
      once: true

 - className: ScreenText
   name: gameIntroText
   plain_text: PilotData/gameIntroText.txt
   keys:
    - key: n
      callback: sendMessage
      args: ['auto']

 - className: Game
   name: thegame
   config: PilotData/gameConfig.yaml
   saveReplay: PilotData/run/replayLogA.txt,w
   logFile: PilotData/run/gameLogA.txt,a
   pointsToEnd: 30
   readFromGlobals:
     rescaleFactor: 12.0
   keys:
    - key: p
      callback: pauseFall
    - key: o
      callback: unPauseFall
    - key: escape
      callback: sendMessage
      args: ['auto']

 - className: EmptyState
   name: end

 - className: DataForm
   name: UserInfo
   config: PilotData/pilotDataForm.yaml

 - className: HUDText
   name: Timer
   text: "0.0"
   topLeft: [10, 10]

 - className: HUDText
   name: MessageAdjustScale
   text: "Please use the keys 'w' (increase), 's' (decrease) to adjust the size of the \nmodel (parachute+robot) so it ocuppies exactly 5 cm on your screen. \nFor finner adjustments use 'e' and 'd' accordingly.\n\nPress the key 'n' when you have finished the adjustment"
   topLeft: [0.1, 0.2]
   keys:
    - key: n
      callback: sendMessage
      args: ['auto']

 - module: ScreenText
   className: ScreenText
   name: PrePilotScreen
   plain_text: PilotData/prePilot.txt
   keys:
    - key: escape
      callback: sendMessage
      args: ['auto']

 - className: Pilot
   name: Pilot
   pilotLog: run/pilotLog.txt,a
   config: PilotData/pilotConfig.yaml
   s_saveReplay: PilotData/run/replayLogA.txt,w
   s_logFile: PilotData/run/pilot.txt,a
   parDistCam: 250.0
   readFromGlobals:
     rescaleFactor: 12.0

 - module: DataForm
   className: DataForm
   name: PilotQuestionnaire
   config: PilotData/pilotQuestionnaire.yaml

 - module: DataForm
   className: UserQuestionnaire
   name: gameQuestions
   config: PilotData/gameQuestionnaire.yaml
   keys:
    - key: i,i-repeat
      callback: scale
      args: ['up']
    - key: k,k-repeat
      callback: scale
      args: ['down']
    - key: n
      callback: sendMessage
      args: ['auto']

 - module: ScreenText
   className: ScreenText
   name: FinalScreen
   plain_text: PilotData/finalText.txt

transitions:
# INTRO
 #- trans: 'start @ IntroScreen:auto'
 - trans: 'start @ thegame:auto'
 - trans: 'thegame@Pilot:auto'
 - trans: 'Pilot@end:auto'
 #- trans: 'start @ MessageAdjustScale:auto'
 #- trans: 'start @ studyServer:auto'
 # - trans: 'start @ gameQuestions:auto'

 # - trans: 'gameQuestions@end:auto'
 #- trans: 'studyServer@end:auto'
 #- trans: 'IntroScreen@end:auto'

 # CONSENT
 - trans: 'IntroScreen @ consentForm:auto'
 - trans: 'consentForm @ UserInfo:consentYes'
 - trans: 'consentForm @ end:consentNo'
 # USER INFO
 - trans: 'UserInfo @ colourBlindText:auto'
 # COLOUR BLIND
 - trans: 'colourBlindText @ colourBlindCheck:auto'
 - trans: 'colourBlindCheck @ colourBlindProblem:imageQueryBad'
 - trans: 'colourBlindProblem @ end:auto'

# PARALLEL STATES!, JUST TO OVERLAY SOME TEXT
 - trans: 'colourBlindCheck @ rescaleScreen:imageQueryOk'
 - trans: 'colourBlindCheck @ MessageAdjustScale:imageQueryOk'

 # RESCALE SCREEN
 - trans: 'rescaleScreen @ gameIntroText:auto'
 - trans: 'MessageAdjustScale @ gameIntroText:auto'
 # GAME
 - trans: 'gameIntroText @ thegame:auto'
 # GAME QUESTIONNAIRE
 #- trans: 'thegame @ gameQuestions:endOfGame'
 # PILOT
 #- trans: 'gameQuestions @ PrePilotScreen:auto'
 - trans: 'PrePilotScreen @ Pilot:auto'
 - trans: 'Pilot @ PilotQuestionnaire: auto'
 # UPLOAD RESULTS
 - trans: 'PilotQuestionnaire @ studyServer: auto'
 - trans: 'PilotQuestionnaire @ FinalScreen: auto'

 # THE END
 - trans: 'studyServer@end: dataUploaded'
 - trans: 'FinalScreen@end:dataUploaded'
